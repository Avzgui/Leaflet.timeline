{"name":"Leaflet.timeline","tagline":"Display arbitrary GeoJSON on a map with a timeline slider and play button","body":"# Leaflet.timeline 0.2.0\r\n\r\nShow any changing geospatial data over time, from points to polygons.\r\n\r\nIf you want smooth motion of markers from point to point, this is not your\r\nplugin. Please check out [LeafletPlayback][], or for real-time data, try\r\n[Leaflet Realtime][], both plugins from which I may or may not have pilfered\r\nsome ideas.\r\n\r\n## Usage\r\n\r\n`Leaflet.timeline` is a subclass of `L.GeoJSON`, so use it as you would that.\r\nThe data you pass in should be something like this:\r\n\r\n``` json\r\n{\r\n  \"type\": \"FeatureCollection\",\r\n  \"features\": [\r\n    {\r\n      \"type\": \"Feature\",\r\n      \"properties\": {\r\n        \"start\": \"1970-01-01\",\r\n        \"end\": \"2014-12-04\"\r\n      },\r\n      \"geometry\": { ... }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nThe date can really be anything `Date()` can process.\r\n\r\nIt does add some extra options:\r\n\r\n## Options\r\n\r\n#### [all GeoJSON's options](http://leafletjs.com/reference.html#geojson)\r\n\r\n#### `start`\r\n*default: earliest `start` in GeoJSON*\r\n\r\nThe beginning/minimum value of the timeline.\r\n\r\n#### `end`\r\n*default: latest `end` in GeoJSON*\r\n\r\nThe end/maximum value of the timeline.\r\n\r\n#### `position`\r\n*default: bottomleft*\r\n\r\n[Position](http://leafletjs.com/reference.html#control) for the timeline\r\ncontrols. Probably doesn't really matter as you'll likely want to expand them\r\nanyway.\r\n\r\n#### `formatDate`\r\n*default: `(date) -> \"\"`*\r\n\r\nA function that takes in a Unix timestamp and outputs a string. Ideally for\r\nformatting the timestamp, but hey, you can do whatever you want.\r\n\r\n#### `enablePlayback`\r\n*default: `true`*\r\n\r\nShow playback controls (i.e. prev/play/pause/next).\r\n\r\n#### `steps`\r\n*default: 1000*\r\n\r\nHow many steps to break the timeline into. Each step will then be `(end-start) /\r\nsteps`. Only affects playback.\r\n\r\n#### `duration`\r\n*default: 10000*\r\n\r\nMinimum time, in ms, for the playback to take. Will almost certainly actually\r\ntake at least a bit longer -- after each frame, the next one displays in\r\n`duration/steps` ms, so each frame really takes frame processing time PLUS\r\nstep time.\r\n\r\n#### `updateMapOnDrag`\r\n*default: true*\r\n\r\nTwo things update as you drag the slider: the time shown and the elements\r\ndisplayed on the map. A very busy map might slow this down, so for better UX\r\ndisable this. The time shown will still update.\r\n\r\n#### `showTicks`\r\n*default: true*\r\n\r\nShow tick marks on slider, representing changes in value(s).\r\n\r\n## Events\r\n\r\n#### `timeline:change`\r\nFired when the selected time changes (either through manually sliding or\r\nthrough playback).\r\n\r\n## Methods\r\n\r\n#### `setTime`\r\nSets the current timeline time. Will parse any dates in just about any format\r\nyou throw at it.\r\n\r\n#### `getDisplayed`\r\nReturns the original GeoJSON of the features that are currently being displayed\r\non the map.\r\n\r\n## Examples\r\n\r\n### Earthquakes\r\n\r\n[Example here][1]. USGS provides [GeoJSON(P) files][2] with earthquake data,\r\nincluding time and magnitude. For this example, that data is read, parsed to the\r\nright format (`start` and `end` values in the GeoJSON `properties`), and added\r\nto a `Leaflet.timeline`.\r\n\r\n\r\n### Country borders after WWII\r\n\r\n[Example here][3]. I found some historical country border data [here][4], though\r\nunfortunately it was not in GeoJSON. Converted it with [ogr2ogr][5]:\r\n\r\n    $ ogr2ogr -f \"GeoJSON\" \\\r\n      -select CNTRY_NAME,COWSYEAR,COWSMONTH,COWSDAY,COWEYEAR,COWEMONTH,COWEDAY \\\r\n      borders.json cshapes.shp\r\n\r\nThen wrangled the data into the right format (examples/borders-parse.js). After\r\nthat, just pass the data to `Leaflet.timeline` and let it handle everything.\r\n\r\n## Change log\r\n\r\n### 0.2.0\r\n- Added previous/next/pause\r\n- Change behavior of play button (will play from wherever it is rather than\r\n  reset to the beginning)\r\n- Lots of code restructuring\r\n- Add more extensive default styling, using Sass\r\n\r\n### 0.1.0\r\n- It kinda works?\r\n\r\n[Leaflet Realtime]: https://github.com/perliedman/leaflet-realtime\r\n[LeafletPlayback]: https://github.com/hallahan/LeafletPlayback\r\n[1]: http://skeate.github.io/Leaflet.timeline/earthquakes.html\r\n[2]: http://earthquake.usgs.gov/earthquakes/feed/v1.0/geojson.php\r\n[3]: http://skeate.github.io/Leaflet.timeline/borders.html\r\n[4]: http://nils.weidmann.ws/projects/cshapes\r\n[5]: http://www.gdal.org/ogr2ogr.html\r\n","google":"UA-54709915-2","note":"Don't delete this file! It's used internally to help with page regeneration."}